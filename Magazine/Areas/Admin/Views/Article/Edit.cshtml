@model DataAccess.EntityFramework.article
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout1.cshtml";
}


@section ClientScript{
    <script>
        $(document).ready(function () {
            $('#btnSelectImage').on('click', function (e) {
                e.preventDefault();
                var finder = new CKFinder();
                finder.selectActionFunction = function (url) {
                    $('#txt-images').val(url);
                };
                finder.popup();
            })

            var editor = CKEDITOR.replace('txt-content', {
                customConfig: '/Assets/admin/js/plugins/ckeditor/config.js',
            })
        })

    </script>
}
<!-- Begin Page Content -->
<div class="container-fluid admin-artcles create-item">

    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">Bài viết</h1>
    <p class="mb-4">
        Chỉnh sửa bài viết
    </p>

    @using (Html.BeginForm("Edit", "Article",FormMethod.Post))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(d => d.article_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(d => d.article_id, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(d => d.article_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(d => d.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(d => d.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(d => d.title, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(d => d.image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(d => d.image, new { htmlAttributes = new { @class = "form-control" }, id = "txt-images" })
            <a href="#" id="btnSelectImage">Browser image</a>
            @Html.ValidationMessageFor(d => d.image, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(d => d.textbody, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(d => d.textbody, new { htmlAttributes = new { @class = "form-control" }, id = "txt-content" })
            @Html.ValidationMessageFor(d => d.textbody, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class = "control-label col-md-2">Người viết</label>
        <div class="col-md-10">
            @Html.DropDownListFor(d => d.user_id, new SelectList(ViewBag.listUser, "user_id", "usename"), new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.user_id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(d => d.cate_id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.DropDownListFor(d => d.cate_id, new SelectList(ViewBag.listCategories, "cate_id", "cate_name"), new { @class = "form-control" })
            @Html.ValidationMessageFor(d => d.cate_id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Update" class="btn btn-default btn-create" />
        </div>
    </div>
</div>
    }


    <div style="margin-top: 30px;">
        @Html.ActionLink("Back to list Artcles", "Index")
    </div>
</div>
<!-- /.container-fluid -->
<!-- End of Main Content -->
